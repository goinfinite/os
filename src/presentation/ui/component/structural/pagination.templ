package componentStructural

import (
	"github.com/goinfinite/os/src/domain/dto"
	componentForm "github.com/goinfinite/os/src/presentation/ui/component/form"
	"strconv"
)

func readPaginationPageNumbers(paginationDto dto.Pagination) []int {
	currentPageNumber := int(paginationDto.PageNumber)
	sidePageCount := 2
	countStart := currentPageNumber - sidePageCount
	countEnd := currentPageNumber + sidePageCount
	if countStart < 0 {
		countStart = 0
		countEnd = countStart + sidePageCount*2
	}

	if paginationDto.PagesTotal == nil {
		return []int{0}
	}

	pagesTotal := int(*paginationDto.PagesTotal)
	if countEnd >= pagesTotal {
		countEnd = pagesTotal - 1
		countStart = countEnd - sidePageCount*2
	}

	if countStart < 0 {
		countStart = 0
	}

	pageNumbers := []int{}
	for i := countStart; i <= countEnd; i++ {
		pageNumbers = append(pageNumbers, i)
	}

	return pageNumbers
}

templ Pagination(
	componentId string,
	paginationDto dto.Pagination,
	selectedPageNumberBindValuePath, selectedItemsPerPageBindValuePath string,
) {
	<!-- Pagination -->
	<div class="flex flex-row items-center justify-items-stretch">
		<div class="flex grow flex-row items-center gap-0.5">
			if paginationDto.PageNumber > 0 {
				<a
					class="hover:bg-os-200 h-5 cursor-pointer rounded-sm p-1 text-[10px] leading-tight"
					@click={ selectedPageNumberBindValuePath + " = " + strconv.Itoa(int(paginationDto.PageNumber)-1) + "; $dispatch('update:" + componentId + "-pagination')" }
				>
					<i class="ph-bold ph-caret-double-left"></i>
				</a>
			}
			for pageNumber := range readPaginationPageNumbers(paginationDto) {
				<a
					@click={ selectedPageNumberBindValuePath + " = " + strconv.Itoa(pageNumber) + "; $dispatch('update:" + componentId + "-pagination')" }
					if pageNumber == int(paginationDto.PageNumber) {
						class="border-1 border-os-400 bg-os-400 hover:bg-os-200 cursor-pointer rounded-sm px-1.5 py-1 text-xs font-bold"
					} else {
						class="border-1 border-os-400 hover:bg-os-200 cursor-pointer rounded-sm px-1.5 py-1 text-xs"
					}
				>
					{ strconv.Itoa(pageNumber) }
				</a>
			}
			if paginationDto.PagesTotal != nil && paginationDto.PageNumber < *paginationDto.PagesTotal-1 {
				<a
					class="hover:bg-os-200 h-5 cursor-pointer rounded-sm p-1 text-[10px] leading-tight"
					@click={ selectedPageNumberBindValuePath + " = " + strconv.Itoa(int(paginationDto.PageNumber)+1) + "; $dispatch('update:" + componentId + "-pagination')" }
				>
					<i class="ph-bold ph-caret-double-right"></i>
				</a>
			}
		</div>
		<div class="w-32">
			@componentForm.SelectInput(
				"itemsPerPage", "items per page", selectedItemsPerPageBindValuePath,
				"$dispatch('update:"+componentId+"-pagination')",
				[]string{"5", "10", "30", "50"}, false,
			)
		</div>
	</div>
}
