package componentMappings

import (
	"github.com/goinfinite/os/src/domain/entity"
	"github.com/goinfinite/os/src/domain/valueObject"
	componentStructural "github.com/goinfinite/os/src/presentation/ui/component/structural"
)

templ VirtualHostMappingsList(
	mappingEntity entity.Mapping,
	rootDirectory valueObject.UnixFilePath,
	deleteOnClick string,
) {
	<!-- VirtualHostMappingsList -->
	<div class="flex w-full items-center justify-between rounded-md bg-neutral-500/5 p-3">
		<div class="flex items-center gap-3">
			<p>{ mappingEntity.Path.String() }</p>
			switch mappingEntity.TargetType.String() {
				case "service":
					@componentStructural.Tag("", "service", mappingEntity.TargetValue.String(), "teal-900")
				case "url":
					@componentStructural.Tag("", "url", mappingEntity.TargetValue.String(), "purple-900")
					if mappingEntity.TargetHttpResponseCode != nil {
						@componentStructural.Tag("", "responseCode", mappingEntity.TargetHttpResponseCode.String(), "cyan-900")
					}
				case "response-code":
					@componentStructural.Tag("", "responseCode", mappingEntity.TargetHttpResponseCode.String(), "cyan-900")
				case "inline-html":
					if len(mappingEntity.TargetValue.String()) > 50 {
						@componentStructural.Tag("", "inlineHtml", mappingEntity.TargetValue.String()[:50]+"...", "sky-700")
					} else {
						@componentStructural.Tag("", "inlineHtml", mappingEntity.TargetValue.String(), "sky-700")
					}
				case "static-files":
					@componentStructural.Tag("", "staticFiles", rootDirectory.String(), "yellow-600")
			}
			@componentStructural.Tag("", "matchPattern", mappingEntity.MatchPattern.String(), "infinite-300")
			if mappingEntity.MarketplaceInstalledItemName != nil {
				@componentStructural.Tag(
					"", "marketplaceItem",
					mappingEntity.MarketplaceInstalledItemName.String()+" (#"+mappingEntity.MarketplaceInstalledItemId.String()+")",
					"violet-900",
				)
			}
			if mappingEntity.ShouldUpgradeInsecureRequests != nil && *mappingEntity.ShouldUpgradeInsecureRequests {
				@componentStructural.Tag("ph-lock", "", "httpsOnly", "lime-900")
			}
		</div>
		<div>
			@componentStructural.CircularIconButtonWithTooltip("ph-trash", "red-800", "red-600", deleteOnClick, "delete mappingEntity", "red-500")
		</div>
	</div>
}
