package page

import (
	"github.com/goinfinite/os/src/domain/entity"
	"github.com/goinfinite/os/src/infra/envs"
	"github.com/goinfinite/os/src/presentation/ui/component/form"
	componentStructural "github.com/goinfinite/os/src/presentation/ui/component/structural"
	"slices"
)

const DefaultFileManagerSourcePath string = "/app"

type FilesGroupedByType struct {
	SourcePath  string
	Directories []entity.UnixFile
	Files       []entity.UnixFile
}

templ FileManagerIndex(filesGroupedByType FilesGroupedByType) {
	<!-- FileManager JavaScript -->
	<script src={ infraEnvs.LocalStatesAssetsPath + "/page/file-manager.js" }></script>
	<!-- FileManager HTML -->
	<div x-data="fileManager">
		<div class="mb-6 flex flex-row items-center justify-between">
			<div class="basis-[70%]">
				@componentStructural.PageTitle(
					"File Manager", "", "ph-files",
				)
			</div>
		</div>
		@FileManagerModal(filesGroupedByType)
		@CreateFileModal()
		@CreateDirectoryModal()
	</div>
}

templ FilesExplorerSearchBar(id, icon, bindModelValuePath, tooltipText, onClick string) {
	<div class="relative h-[90%] w-full">
		<input
			type="text"
			if bindModelValuePath != "" {
				x-model:value={ bindModelValuePath }
			}
			autocomplete="off"
			class="bg-os-300 border-os-200 hover:border-os-100 autofill:bg-os-300 focus:border-os-50 peer relative h-full w-full rounded-l-md border pl-8 pr-3 text-sm text-neutral-100 placeholder-transparent outline-none transition-all"
		/>
		<div class="absolute left-2.5 top-1/2 z-10 w-fit -translate-y-1/2">
			<i class={ "ph-duotone " + icon }></i>
		</div>
		<div class={ "group/fileExplorerSearchBar_" + id + " absolute right-2 top-1/2 z-10 w-fit -translate-y-1/2" }>
			<i class="ph-duotone ph-info cursor-help"></i>
			<div class={ "invisible absolute bottom-full mb-2 w-max -translate-x-1/2 rounded-md bg-os-200 p-2 text-xs text-white shadow-lg group-hover/fileExplorerSearchBar_" + id + ":visible group-hover/fileExplorerSearchBar_" + id + ":block" }>
				{ tooltipText }
			</div>
		</div>
	</div>
	<button
		type="button"
		@click={ onClick }
		class="bg-os-400 border-os-200 hover:border-os-100 hover:bg-os-200 inline-flex h-[90%] items-center rounded-r-md border-y border-r p-2 text-center"
	>
		<i class="ph-duotone ph-arrow-right text-xl"></i>
	</button>
}

templ FilesExplorerTableHeaders() {
	<!-- FilesExplorerTable  Headers-->
	<div class="grid grid-rows-2 gap-y-2 rounded">
		<!-- FilesExplorerTable Headers Buttons -->
		<div class="grid grid-cols-4 gap-3">
			<div class="bg-os-500 flex justify-center gap-3 rounded p-2">
				@componentStructural.ResponsibleRoundedSquareButton(componentStructural.ResponsibleRoundedSquareButtonDto{
					Icon:                    "ph-file-plus",
					TextContent:             "Add File",
					DefaultColor:            "os-500",
					HoverColor:              "os-200",
					OnClick:                 "openCreateFileModal()",
					HideTextBelowBreakpoint: "1720px",
				})
				@componentStructural.ResponsibleRoundedSquareButton(componentStructural.ResponsibleRoundedSquareButtonDto{
					Icon:                    "ph-folder-plus",
					TextContent:             "Add Folder",
					DefaultColor:            "os-500",
					HoverColor:              "os-200",
					OnClick:                 "openCreateDirectoryModal()",
					HideTextBelowBreakpoint: "1720px",
				})
				@componentStructural.ResponsibleRoundedSquareButton(componentStructural.ResponsibleRoundedSquareButtonDto{
					Icon:                    "ph-upload-simple",
					TextContent:             "Upload",
					DefaultColor:            "os-500",
					HoverColor:              "os-200",
					OnClick:                 "console.log('Upload')",
					HideTextBelowBreakpoint: "1720px",
				})
			</div>
			<div class="bg-os-500 col-span-2 flex justify-center gap-3 rounded p-2">
				@componentStructural.ResponsibleRoundedSquareButton(componentStructural.ResponsibleRoundedSquareButtonDto{
					Icon:                    "ph-code",
					TextContent:             "Edit Code",
					DefaultColor:            "os-500",
					HoverColor:              "os-200",
					OnClick:                 "console.log('Edit code')",
					HideTextBelowBreakpoint: "1720px",
				})
				@componentStructural.ResponsibleRoundedSquareButton(componentStructural.ResponsibleRoundedSquareButtonDto{
					Icon:                    "ph-copy",
					TextContent:             "Copy",
					DefaultColor:            "os-500",
					HoverColor:              "os-200",
					OnClick:                 "console.log('Copy')",
					HideTextBelowBreakpoint: "1720px",
				})
				@componentStructural.ResponsibleRoundedSquareButton(componentStructural.ResponsibleRoundedSquareButtonDto{
					Icon:                    "ph-arrow-square-out",
					TextContent:             "Move",
					DefaultColor:            "os-500",
					HoverColor:              "os-200",
					OnClick:                 "console.log('Move')",
					HideTextBelowBreakpoint: "1720px",
				})
				@componentStructural.ResponsibleRoundedSquareButton(componentStructural.ResponsibleRoundedSquareButtonDto{
					Icon:                    "ph-download-simple",
					TextContent:             "Download",
					DefaultColor:            "os-500",
					HoverColor:              "os-200",
					OnClick:                 "console.log('Download')",
					HideTextBelowBreakpoint: "1720px",
				})
				@componentStructural.ResponsibleRoundedSquareButton(componentStructural.ResponsibleRoundedSquareButtonDto{
					Icon:                    "ph-pencil-line",
					TextContent:             "Rename",
					DefaultColor:            "os-500",
					HoverColor:              "os-200",
					OnClick:                 "console.log('Rename')",
					HideTextBelowBreakpoint: "1720px",
				})
				@componentStructural.ResponsibleRoundedSquareButton(componentStructural.ResponsibleRoundedSquareButtonDto{
					Icon:                    "ph-trash",
					TextContent:             "Delete",
					DefaultColor:            "os-500",
					HoverColor:              "os-200",
					OnClick:                 "console.log('Delete')",
					HideTextBelowBreakpoint: "1720px",
				})
			</div>
			<div class="bg-os-500 flex justify-center gap-3 rounded p-2">
				@componentStructural.ResponsibleRoundedSquareButton(componentStructural.ResponsibleRoundedSquareButtonDto{
					Icon:                    "ph-folder-lock",
					TextContent:             "Permissions",
					DefaultColor:            "os-500",
					HoverColor:              "os-200",
					OnClick:                 "console.log('Permissions')",
					HideTextBelowBreakpoint: "1720px",
				})
				@componentStructural.ResponsibleRoundedSquareButton(componentStructural.ResponsibleRoundedSquareButtonDto{
					Icon:                    "ph-box-arrow-down",
					TextContent:             "Compress",
					DefaultColor:            "os-500",
					HoverColor:              "os-200",
					OnClick:                 "console.log('Compress')",
					HideTextBelowBreakpoint: "1720px",
				})
				@componentStructural.ResponsibleRoundedSquareButton(componentStructural.ResponsibleRoundedSquareButtonDto{
					Icon:                    "ph-box-arrow-up",
					TextContent:             "Extract",
					DefaultColor:            "os-500",
					HoverColor:              "os-200",
					OnClick:                 "console.log('Extract')",
					HideTextBelowBreakpoint: "1720px",
				})
			</div>
		</div>
		<!-- FilesExplorerTable Headers Search Bars -->
		<div class="grid grid-cols-4 gap-2">
			<div class="flex items-center justify-center gap-1 rounded p-2">
				@componentStructural.ResponsibleRoundedSquareButton(componentStructural.ResponsibleRoundedSquareButtonDto{
					Icon:                    "ph-house",
					TextContent:             "Home",
					DefaultColor:            "os-400",
					HoverColor:              "os-200",
					OnClick:                 "file.path = '" + DefaultFileManagerSourcePath + "'; accessDesiredSourcePath()",
					HideTextBelowBreakpoint: "1720px",
				})
				@componentStructural.RoundedSquareButton(componentStructural.RoundedSquareButtonDto{
					Icon:         "ph-arrow-left",
					TooltipText:  "Back",
					DefaultColor: "os-400",
					HoverColor:   "os-200",
					OnClick:      "returnToPreviousSourcePath()",
				})
				@componentStructural.RoundedSquareButton(componentStructural.RoundedSquareButtonDto{
					Icon:         "ph-arrow-right",
					TooltipText:  "Forward",
					DefaultColor: "os-400",
					HoverColor:   "os-200",
					OnClick:      "goForwardToNextSourcePath()",
				})
				@componentStructural.RoundedSquareButton(componentStructural.RoundedSquareButtonDto{
					Icon:         "ph-arrows-clockwise",
					TooltipText:  "Reload",
					DefaultColor: "os-400",
					HoverColor:   "os-200",
					OnClick:      "reloadFileManagerContent()",
				})
			</div>
			<div class="col-span-2 flex items-center justify-center rounded p-2">
				@FilesExplorerSearchBar(
					"fileExplorerSourcePath", "ph-folder", "file.path",
					`Use it to search and open another directory. The default path is "/app".`,
					"accessDesiredSourcePath()",
				)
			</div>
			<div class="flex items-center justify-center rounded p-2">
				@FilesExplorerSearchBar(
					"fileExplorerFileName", "ph-magnifying-glass",
					"searchBarFilter.fileName", "Use it to find a file by name.",
					"console.log('Search File Name')",
				)
			</div>
		</div>
	</div>
}

templ DirectoriesTree(directoriesList []entity.UnixFile) {
	<!-- FilesExplorerTable DirectoriesTree -->
	<div class="bg-os-500 h-120 ml-2 flex w-full flex-col space-y-2 overflow-y-auto p-2">
		for _, directoryEntity := range directoriesList {
			<div id={ directoryEntity.Name.String() + "DirectoryTreeItem" }>
				<a
					class="flex w-fit cursor-pointer items-center px-2"
					@click={ "console.log('Open " + directoryEntity.Name.String() + " directory')" }
				>
					<i class="ph-bold ph-caret-right mr-2 text-sm text-neutral-500"></i>
					<i class="ph-bold ph-folder text-infinite-500 mr-1"></i>
					<p>{ directoryEntity.Name.String() }</p>
				</a>
			</div>
		}
	</div>
}

templ FilesExplorer(filesGroupedByType FilesGroupedByType) {
	<!-- FilesExplorerTable FilesExplorer -->
	<div class="bg-os-500 col-span-3 mr-2 w-full">
		<table class="w-full table-auto border-collapse transition-all duration-300 ease-in-out">
			<!-- AccountsTable Header -->
			<thead class="text-xs uppercase text-neutral-400">
				<tr class="bg-os-300">
					<th scope="col" class="w-1/8 px-5 py-3 text-left">Name</th>
					<th scope="col" class="w-1/8 px-5 py-3 text-right">Size</th>
					<th scope="col" class="w-3/8 px-5 py-3 text-center">Updated At</th>
					<th scope="col" class="w-1/8 px-5 py-3 text-center">Permissions</th>
					<th scope="col" class="w-2/8 px-5 py-3 text-center">Ownership</th>
				</tr>
			</thead>
		</table>
		<div class="h-110 overflow-y-auto">
			<table class="w-full">
				<tbody class="p-2">
					{{
						filesAndDirsList := slices.Concat(
							filesGroupedByType.Directories, filesGroupedByType.Files,
						)
					}}
					for _, fileEntity := range filesAndDirsList {
						<tr class="border-os-300 border-t first:border-opacity-0">
							<th scope="row" class="w-1/8 px-5 py-3 text-left font-normal">
								{{
									fileHighlightedIcon := "ph-file text-slate-600"
									if fileEntity.MimeType.IsDir() {
										fileHighlightedIcon = "ph-folder text-infinite-500"
									}
								}}
								<div class="justify-content flex items-center">
									<i class={ "ph-bold " + fileHighlightedIcon + " mr-2" }></i>
									<p>{ fileEntity.Name.String() }</p>
								</div>
							</th>
							<th scope="row" class="w-1/8 px-5 py-3 text-right font-normal">{ fileEntity.Size.StringWithSuffix() }</th>
							<th scope="row" class="w-3/8 px-5 py-3 text-center font-normal">{ fileEntity.UpdatedAt.ReadDateTime() }</th>
							<th scope="row" class="w-1/8 px-5 py-3 text-center font-normal">{ fileEntity.Permissions.String() }</th>
							<th scope="row" class="w-2/8 px-5 py-3 text-center font-normal">{ fileEntity.Owner.String() + ":" + fileEntity.Group.String() }</th>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</div>
}

templ FileManagerModal(filesGroupedByType FilesGroupedByType) {
	<!-- FileManagerModal -->
	<div class="bg-os-800 space-y-2 p-3">
		@FilesExplorerTableHeaders()
		<!-- FileManagerModal Content -->
		<div id="file-manager-content" class="grid h-full grid-cols-4 gap-5">
			<data id="current-source-path" class="hidden" value={ filesGroupedByType.SourcePath }></data>
			@DirectoriesTree(filesGroupedByType.Directories)
			@FilesExplorer(filesGroupedByType)
		</div>
	</div>
}

templ CreateFileForm(closeFunction string) {
	<form
		hx-post="/api/v1/files/"
		hx-indicator="#loading-overlay"
		hx-swap="none"
	>
		<div class="mb-6">
			<input type="hidden" name="filePath" :value="currentSourcePath + '/' + file.name"/>
			@componentForm.InputFieldWithPrefix(componentForm.InputFieldWithPrefixDto{
				Type:                "text",
				Label:               "Name",
				BindPrefixValuePath: "currentSourcePath",
				BindInputValuePath:  "file.name",
			})
		</div>
		@componentForm.SubmitButton(
			"", "Create", "ph-fat-check",
			closeFunction+"; reloadFileManagerContent()", false,
		)
	</form>
}

templ CreateFileModal() {
	@componentStructural.RegularModal(
		"Create File", "isCreateFileModalOpen", "closeCreateFileModal()",
		"currentSourcePath",
	) {
		<input name="mimeType" type="hidden" value="file"/>
		@CreateFileForm("closeCreateFileModal()")
	}
}

templ CreateDirectoryModal() {
	@componentStructural.RegularModal(
		"Create Directory", "isCreateDirectoryModalOpen", "closeCreateDirectoryModal()",
		"currentSourcePath",
	) {
		<input name="mimeType" type="hidden" value="directory"/>
		@CreateFileForm("closeCreateDirectoryModal()")
	}
}
